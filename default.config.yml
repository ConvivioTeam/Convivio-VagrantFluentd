---
# Available `vagrant_box` values include:
#   - beet/box (pre-provisioned, based on Ubuntu 16.04)
#   - ubuntu/precise32 (Official Ubuntu Server 12.04 LTS [Precise Pangolin] builds)
#   - ubuntu/trusty64 (Official Ubuntu Server 14.04 LTS [Trusty Tahr] builds)
#   - ubuntu/xenial64 (Official Ubuntu 16.04 LTS [Xenial Xerus] Daily Build)
#   - ubuntu/artful64 (Official Ubuntu Server 17.10 [Artful Aardvark] builds)
vagrant_box: ubuntu/xenial64

vagrant_user: vagrant
vagrant_synced_folder_default_type: nfs
vagrant_gui: false

# If you need to run multiple instances of Drupal VM, set a unique hostname,
# machine name, and IP address for each instance.
vagrant_hostname: fluentdvm.test
vagrant_machine_name: fluentdvm
vagrant_ip: 192.168.66.66

# Allow Fluentd VM to be accessed via a public network interface on your host.
# Vagrant boxes are insecure by default, so be careful. You've been warned!
# See: https://docs.vagrantup.com/v2/networking/public_network.html
vagrant_public_ip: ""

# A list of synced folders, with the keys 'local_path', 'destination', and
# a 'type' of [nfs|rsync|smb] (leave empty for slow native shares).
vagrant_synced_folders:
  # The first synced folder will be used for the default Fluentd installation, if
  # any of the build_* settings are 'true'. By default the folder is set to
  # the fluentd-vm folder.
  - local_path: .
    destination: "{{ fluendvm_install_dir }}"
    type: nfs
    create: true

# Memory and CPU to use for this VM.
vagrant_memory: 2048
vagrant_cpus: 1

# Ensure vagrant plugins are installed.
vagrant_plugins:
  - name: vagrant-vbguest
  - name: vagrant-hostsupdater

# Minimum required versions.
fluentdvm_vagrant_version_min: '1.8.6'
fluentdvm_ansible_version_min: '2.4'

# Force use of ansible_local provisioner, even if Ansible is installed on host.
force_ansible_local: false

installed_extras:
  - pimpmylog
#  - xdebug

# Add any extra apt or yum packages you would like installed.
extra_packages:
  - net-tools
  - vim
  - ruby

# Other configuration.
known_hosts_path: ~/.ssh/known_hosts
hostname_configure: true
hostname_fqdn: "{{ vagrant_hostname }}"


# fluentd install configuration
fluentd_apt_key_url: https://packages.treasuredata.com/GPG-KEY-td-agent
fluentd_apt_repositories:
  - "deb http://packages.treasuredata.com/2/{{ ansible_distribution | lower }}/{{ ansible_distribution_release | lower }}/ {{ ansible_distribution_release | lower }} contrib"
fluentd_packages:
  - td-agent

fluentd_daemon: td-agent
fluentd_config_path: /etc/td-agent
fluentd_log_path: /var/log/td-agent
fluentd_user: td-agent
fluentd_usergroup: td-agent

# fluentd additional plugins
fluentd_plugins:
  - fluent-plugin-elasticsearch

# fluentd basic configuration
fluentd_system_config:
  process_name: ansible-fluentd

fluentd_source_config:
  - "@type": forward
    port: 24224
  - "@type": http
    port: 9880

fluentd_app_log_pattern: "*myapp.log"
fluentd_app_logstash_prefix: "myapp_log"

# Send nginx.access tagged messages to elasticsearch
fluentd_match_config:
  - pattern: "{{ fluentd_app_log_pattern }}"
    "@type": elasticsearch
    host: localhost
    port: 9201
    type_name: "{{ fluentd_app_logstash_prefix }}"
    logstash_format: "true"
    logstash_prefix: "{{ fluentd_app_logstash_prefix }}"

#fluentd_match_config:
#  - pattern: "myapp.access"
#    "@type": file
#    path: /var/log/td-agent/myapp.access
#    time_slice_format: "%Y%m%d"
#    time_slice_wait: 10m
#    time_format: "%Y%m%dT%H%M%S%z"
#

fluentd_filter_config:
  - name: "{{ fluentd_app_log_pattern }}"
    "@type": record_transformer
    record:
      host_param: '"#{Socket.gethostname}"'


# Elasticsearch install configuration
es_instance_name: "node1"
es_data_dirs: "/opt/elasticsearch/data"
es_log_dir: "/opt/elasticsearch/logs"
es_config:
  - node.name: "node1"
  - cluster.name: "custom-cluster"
  - discovery.zen.ping.unicast.hosts: "localhost:9301"
  - http.port: 9201
  - transport.tcp.port: 9301
  - node.data: false
  - node.master: true
  - bootstrap.memory_lock: true
es_scripts: false
es_templates: false
es_version_lock: false
es_heap_size: 1g
es_start_service: false
es_plugins_reinstall: false
es_api_port: 9201

# Kibana install configuration.
kibana_install: true
kibana_config_dir: /usr/local/kibana/config

kibana_config_port : 5601
kibana_config_activate: True
kibana_config_init: systemd

#kibana_config_bind: '0.0.0.0'
#kibana_config_server_basepath: /non-default-path
#kibana_config_pki:
#  cert: /path/to/server.crt
#  key: /path/to/server.key

kibana_config_es_url: "http://localhost:{{ es_api_port }}"

#kibana_config_es_basic_auth:
#  username: user
#  password: pass

#kibana_config_es_pki:
#  ca: /path/to/cacert.pem
#  cert: /path/to/client.crt
#  key: /path/to/client.key
#  verify: True

fluentdvm_domain: "{{ vagrant_hostname }}"
fluendvm_install_dir: "/var/www/fluentdvm"
fluentdvm_core_path: "{{ fluendvm_install_dir }}/web"

# The web server software to use. Can be either 'apache' or 'nginx'.
fluentdvm_webserver: "nginx"

# Nginx hosts. Each site will get a server entry using the configuration defined
# here. Set the 'is_php' property for document roots that contain PHP apps like
# Drupal.
nginx_vhosts:
  - server_name: "{{ fluentdvm_domain }} www.{{ fluentdvm_domain }}"
    root: "{{ fluentdvm_core_path }}"

# Helper variable to configure the PHP-FPM connection for each Apache
# VirtualHost in the `apache_vhosts` list.
apache_vhost_php_fpm_parameters: |
    <FilesMatch \.php$>
      SetHandler "proxy:fcgi://{{ php_fpm_listen }}"
    </FilesMatch>

# Apache VirtualHosts. Add one for each site you are running inside the VM. For
# multisite deployments, you can point multiple servernames at one documentroot.
# View the geerlingguy.apache Ansible Role README for more options.
apache_vhosts: []
#  - servername: "{{ fluentdvm_domain }}"
#    serveralias: "www.{{ fluentdvm_domain }}"
#    documentroot: "{{ fluentdvm_core_path }}"
#    extra_parameters: "{{ apache_vhost_php_fpm_parameters }}"

apache_packages_state: latest
apache_remove_default_vhost: true
apache_mods_enabled:
  - expires.load
  - headers.load
  - ssl.load
  - rewrite.load
  - proxy.load
  - proxy_fcgi.load

# Other configuration.
known_hosts_path: ~/.ssh/known_hosts
hostname_configure: true
hostname_fqdn: "{{ vagrant_hostname }}"
